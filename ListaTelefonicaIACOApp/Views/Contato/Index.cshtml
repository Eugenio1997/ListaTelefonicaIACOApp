@using ListaTelefonicaIACOApp.Constantes
@using ListaTelefonicaIACOApp.ViewModels
@using ListaTelefonicaIACOApp.ViewModels.Contato
@model ContatoIndexViewModel

@{
    ViewData["Title"] = "Agenda Telefônica - IACO";
}

<div class="modal fade" id="modalConfirmarExclusao" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalLabel">Confirmar Exclusão</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
      </div>
      <div class="modal-body">
        Tem certeza que deseja excluir o contato <strong id="nomeContatoModal"></strong>?
      </div>
      <div class="modal-footer">
       <form id="formExcluirContato" method="post" asp-action="DeleteContato" asp-controller="Contato">
            @Html.AntiForgeryToken()
            <input type="hidden" id="idContatoExcluir" name="id" />
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            <button type="submit" class="btn btn-danger" id="btnConfirmarExclusao">Excluir</button>
       </form>
      </div>
    </div>
  </div>
</div>


<body>
   
    <div style="background-color: #f9f9f9; padding:20px; min-width:300px" class="p-4 rounded-3">
        <form id="formFiltro" class="d-flex row g-3 p-3 flex-column justify-content-center">
            <div class="d-flex flex-column w-100 col-auto m-0" style="padding:10px; gap:30px">
                <div class="row justify-content-between border-1 border-bottom">
                    <h1 class="col-auto m-0 align-self-center">
                         Filtros
                    </h1>
                    @if(User.IsInRole(Roles.Administrador) || User.IsInRole(Roles.Recepcao) || User.IsInRole(Roles.Guarita))
                    {
                        <div class="col-auto" style="height: 70px; width: 70px; 
                            background-color: #f9f9f9;  border-radius: 5px;"
                            data-bs-toggle="tooltip" data-bs-placement="top" title="Adicionar Contato"
                            >
                            <a  class="d-flex justify-content-center align-items-center" asp-action="Create">
                                <i style="font-size:40px" class="bi bi-person-plus text-dark icon-add-colaborador"> </i>
                            </a>
                        </div>
                    }
                    
                </div>
                <div style="gap:20px" class="row">
                    <div class="col-md-6 campos-filtros">
                        <label asp-for="Contato_Nome" class="">Nome</label>
                        <input asp-for="Contato_Nome" type="text" class="form-control" id="Nome" placeholder="Ex: Ana Pereira dos Santos">
                    </div>

                    <div class="col-md-4 campos-filtros">
                        <label asp-for="Contato_Fixo" class="">Fixo</label>
                        <input asp-for="Contato_Fixo" type="tel" class="form-control filtro-fixo" id="Fixo" placeholder="Ex: 11 2345-6789  ">
                    </div>

                    <div class="col-md-4 campos-filtros">
                        <label asp-for="Contato_Celular" class="">Celular</label>
                        <input asp-for="Contato_Celular" type="tel" class="form-control filtro-celular" id="Celular" placeholder="Ex: 11 998877665">  
                    </div>
                    <div class="col-md-4 campos-filtros">
                        <label asp-for="Contato_Comercial" class="">Ramal</label>
                        <input asp-for="Contato_Comercial" type="tel" class="form-control" id="Comercial" placeholder="0000">
                    </div>   
                        <div class="col-md-4 campos-filtros">
                        <label asp-for="Contato_Endereco" class="">Endereco</label>
                        <input asp-for="Contato_Endereco" type="text" class="form-control" id="Endereco" placeholder="Ex: Rua José de Alencar - 90 - Antares - Costa Rica">
                    </div> 
                        <div class="col-md-8 campos-filtros">
                        <label asp-for="Contato_Email" class="">Email</label>
                        <input asp-for="Contato_Email" type="email" class="form-control" id="Email" placeholder="Ex: Ana.clara@iaco.ind.br">        
                    </div>
                
                    <div style="height:50px" class="d-flex w-100 justify-content-end gap-4 align-items-center col-auto">
                        <button
                                id="btnLimparFiltros"
                                style=""
                                type="button"
                                class="btn btn-outline-secondary col-auto h-75">Limpar Filtros
                        </button>

                        <button
                                id="btnFiltrar"
                                style=""
                                type="submit"
                                class="btn btn-primary col-auto h-75">Buscar
                        </button>
                    </div>
                           
              
                </div>
                
                
            </div>
        </form>
    </div>

    <div class="toast-container position-fixed top-0 end-0 p-3" id="toastContainer"></div>
    
    <div id="mensagem-nenhum-contato" class="text-center d-none">
        <p class="fw-bold fs-4 m-0">Nenhum contato foi encontrado.</p>
        <p class="m-0">Verifique os filtros aplicados ou clique em <strong>Limpar Filtros</strong> para listar todos os contatos.</p>    
    </div>
   
    @if (Model != null && Model.Contatos.Any())
    {
        <div id="spinner-loading" class="text-center py-4" style="display: none;">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Carregando...</span>
            </div>
        </div>
        <div id="table-responsive" style="min-height:500px; min-width:300px" class="table-responsive d-flex">
            <table id="table" class="table table-striped table-hover table-borderless m-0 h-75 tabela-contatos">
                
                <thead class="table-light position-sticky top-0" style="min-height:60px">
                    <tr>
                        <th style="font-size:16px; min-width:120px; min-height:60px" class="text-nowrap">@Html.DisplayNameFor(model => model.Contato_Nome)</th>
                        <th style="font-size:16px; min-width:100px; min-height:60px" class="text-nowrap">@Html.DisplayNameFor(model => model.Contato_Fixo)</th>
                        <th style="font-size:16px; min-width:100px; min-height:60px" class="text-nowrap">@Html.DisplayNameFor(model => model.Contato_Celular)</th>
                        <th style="font-size:16px; min-width:100px; min-height:60px" class="text-nowrap">@Html.DisplayNameFor(model => model.Contato_Comercial)</th>
                        <th style="font-size:16px; min-width:100px; min-height:60px" class="text-nowrap">@Html.DisplayNameFor(model => model.Contato_Endereco)</th>
                        <th style="font-size:16px; min-width:180px; min-height:60px" class="text-nowrap">@Html.DisplayNameFor(model => model.Contato_Email)</th>
                        <th style="font-size:16px; min-width:180px; min-height:60px" class="text-nowrap">@Html.DisplayNameFor(model => model.Contato_CriadoAs)</th>
                        <th style="font-size:16px; min-width:180px; min-height:60px" class="text-nowrap">@Html.DisplayNameFor(model => model.Contato_EditadoAs)</th>

                        <th style="min-width:50px; min-height:60px"></th>
                        @if(User.IsInRole(Roles.Administrador) || User.IsInRole(Roles.Recepcao) || User.IsInRole(Roles.Guarita))
                         {
                            <th style="min-width:50px; min-height:60px"></th>
                            <th style="min-width:50px; min-height:60px"></th>
                         }
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.Contatos)
                    {
                        <tr style="height:60px">
                            <td class="text-nowrap" style="min-width:180px; min-height:60px">@Html.DisplayFor(modelItem => item.Contato_Nome)</td>

                            <td class="text-nowrap" style="min-width:180px; min-height:60px">
                             <input type="text" value="@item.Contato_Fixo" class="form-control input-sem-borda" />
                            </td>
                            <td class="text-nowrap" style="min-width:180px; min-height:60px">
                             <input type="text" value="@item.Contato_Celular" class="form-control input-sem-borda" />
                            </td>
                            <td class="text-nowrap" style="min-width:180px; min-height:60px">
                             <input type="text" value="@item.Contato_Comercial" class="form-control input-sem-borda" />
                            </td>
                          
                            <td class="text-nowrap" style="min-width:180px; min-height:60px">@Html.DisplayFor(modelItem => item.Contato_Endereco)</td>
                            <td class="text-nowrap" style="min-width:180px; min-height:60px">@Html.DisplayFor(modelItem => item.Contato_Email)</td>
                            <td class="text-nowrap" style="min-width:180px; min-height:60px">@Html.DisplayFor(modelItem => item.Contato_CriadoAs)</td>
                            <td class="text-nowrap" style="min-width:180px; min-height:60px">@Html.DisplayFor(modelItem => item.Contato_EditadoAs)</td>

                            @if (!User.IsInRole("admin") && !User.IsInRole("recepcao") && !User.IsInRole("guarita"))
                            {
                                 <td style="width:50px; height:60px" class="text-nowrap">
                                    <a asp-action="Details" asp-route-id="@item.Contato_Id"><i class="bi bi-eye text-dark"></i></a>
                                </td>
                            }

                            @if (User.IsInRole("admin") || User.IsInRole("recepcao") || User.IsInRole("guarita"))
                            {

                                 <td style="width:50px; height:60px" class="text-nowrap">
                                    <a asp-action="Details" asp-route-id="@item.Contato_Id"><i class="bi bi-eye text-dark"></i></a>
                                </td>
                                 <td style="width:50px; height:60px" class="text-nowrap">
                                    <a asp-action="Edit" asp-route-id="@item.Contato_Id"><i class="bi bi-pencil-square text-dark"></i></a>
                                </td>
                                <td style="width:50px; height:60px" class="text-nowrap">
                                    <a href="#" 
                                       class="btn-abrir-modal-exclusao"
                                       data-id="@item.Contato_Id"
                                       data-nome="@item.Contato_Nome"
                                       data-bs-toggle="modal"
                                       data-bs-target="#modalConfirmarExclusao">
                                       <i class="bi bi-trash text-dark"></i>
                                    </a>
                                </td>
                                
                            }

                        </tr>
                    }
                </tbody>

               
            </table>
        </div>
        

    }
    <div id="grandfather-pagination" style="height: 60px; min-width: 300px;" class="d-flex col-auto justify-content-end align-items-center">
        <nav aria-label="Paginação">
            <ul class="pagination mb-0">

                @if (ViewBag.PaginaAtual > 10)
                {
                    <li class="page-item">
                            <a class="page-link" href="javascript:void(0)" data-pagina="@(ViewBag.PaginaAtual - 10)">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                    </li>
                }
                else{
                      <li class="page-item disabled">
                            <a class="page-link" href="javascript:void(0)">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                    </li>
                }

                @if (ViewBag.PaginaAtual > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="javascript:void(0)" data-pagina="@(ViewBag.PaginaAtual - 1)">
                            <span aria-hidden="true">&lsaquo;</span>
                        </a>
                    </li>

                }else{
                      <li class="page-item disabled">
                            <a class="page-link" href="javascript:void(0)">
                                <span aria-hidden="true">&lsaquo;</span>
                            </a>
                       </li>
                }

                 
                <li class="page-item disabled">
                    <a class="page-link" href="javascript:void(0)" data-pagina="@(ViewBag.PaginaAtual)">@(ViewBag.PaginaAtual)</a>
                </li>
                        
                   
                <li class="page-item disabled">
                    <a class="page-link" href="javascript:void(0)">de</a>
                </li> 
                        
                   
                <li class="page-item disabled">
                    <a class="page-link" href="javascript:void(0)" data-pagina="@(ViewBag.totalPaginas)">@(ViewBag.totalPaginas)</a>
                </li>
                

                @if (ViewBag.PaginaAtual < ViewBag.TotalPaginas)
                {


                    <li class="page-item">
                        <a class="page-link" href="javascript:void(0)" data-pagina="@(ViewBag.PaginaAtual + 1)"><span aria-hidden="true" >&rsaquo;</span ></a>
                    </li>

                }else{
                    <li class="page-item disabled">
                        <a class="page-link" href="javascript:void(0)"><span aria-hidden="true" >&rsaquo;</span ></a>
                    </li>
                }

                @if (ViewBag.PaginaAtual + 10 <= ViewBag.TotalPaginas)
                {
                    <li class="page-item">
                            <a class="page-link" href="javascript:void(0)" data-pagina="@(ViewBag.PaginaAtual - 10)">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                    </li>
                }
                else{
                      <li class="page-item disabled">
                            <a class="page-link" href="javascript:void(0)">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                    </li>
                }

            </ul>
        </nav>

    </div>
</body>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}



    <script>

        let params = {}
        let queryString;

        $(document).ready(function () {

            function carregarTabela(paginaAtual, totalPaginas) {

                $.ajax({
                    url: '/Contato/ObterTabela',
                    type: 'GET',
                    data: {
                        paginaAtual: paginaAtual,
                        totalPaginas: totalPaginas
                    },
                    success: function (response) {
                         if (response.sucesso) {
                            $('#table tbody').html(response.html);
                            aplicarMascaras();
                            aplicarReadonly();
                            gerarPaginacao(response.paginaAtual, response.totalPaginas);
                            mostrarToast("Sucesso", "Contato deletado com sucesso!", "success");
                         }
                    },
                    error: function (xhr) {
                        if (xhr.status === 400) {
                            let erros = xhr.responseJSON;
                            let mensagens = '';

                            // Itera sobre cada campo com erro
                            for (const campo in erros) {
                                const mensagensCampo = erros[campo];
                                mensagensCampo.forEach(mensagem => {
                                    mensagens += `• ${mensagem}<br>`;
                                });
                            }

                            mostrarToast("Erros de Validação", mensagens, "danger");

                        }else {
                            mostrarToast("Erro", "Erro inesperado ao cadastrar contato.", "danger");
                        }

                    }
                });
            }



            // ATRIBUINDO ID e NOME do CONTATO ao MODAL - INICIO
            let id;
            let nome;

            $(document).on('click', '.btn-abrir-modal-exclusao', function () {
                id = $(this).data('id');
                nome = $(this).data('nome');

                $('#idContatoExcluir').val(id);
                $('#nomeContatoModal').text(nome);
            });
            // ATRIBUINDO ID e NOME do CONTATO ao MODAL - FIM


            //REALIZANDO A DELECAO DO CONTATO -- INICIO
            $('#formExcluirContato').on('submit', function (e) {
                e.preventDefault();

                const form = $(this);
                const data = form.serialize();
                const idContatoExcluir = $('#idContatoExcluir').val();

                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: data,
                    success: function (response) {
                        if (response.sucesso) {
                            $('#modalConfirmarExclusao').modal('hide');
                                carregarTabela(response.paginaAtual, response.totalPaginas);
                        } else {
                            alert(response?.mensagem ?? 'Erro ao excluir o contato.');
                        }
                    },
                    error: function (xhr) {
                        const response = xhr.responseJSON;
                        alert(response?.mensagem ?? 'Erro ao excluir o contato.');
                    }
                });
            });

            //REALIZANDO A DELECAO DO CONTATO -- FIM


            // ✅ Carrega automaticamente a página 1 ao abrir
            carregarContatosPaginados(1);


            function carregarContatosPaginados(pagina = 1, queryString = "" ){
                $.ajax({
                    type: "GET",
                    url: `/Contato/ObterContatosPaginados?paginaAtual=${pagina}&${queryString}`,
                    beforeSend: function () {
                        $('#spinner-loading').show();         // Mostra o spinner
                        $('#table').hide();                  // Esconde tabela enquanto carrega
                        $('#mensagem-nenhum-contato').hide(); // Garante que mensagem esteja oculta durante o carregamento
                    },
                    success: function (response) {
                        if (!response.encontrou) {
                            $('#table').hide();
                            $('#table-responsive')[0].style.setProperty('display', 'none', 'important');
                            //$('#grandfather-pagination')[0].style.setProperty('display', 'none', 'important');
                            $('#mensagem-nenhum-contato')[0].style.setProperty('display', 'block', 'important');
                            $('.pagination').hide(); // Oculta a paginação
                        } else {
                            $('#mensagem-nenhum-contato').hide();
                            $('#table-responsive')[0].style.setProperty('display', 'block', 'important');
                            $('#table-responsive').get(0).style.setProperty('min-height', '500px', 'important');
                            $('#table-responsive').get(0).style.setProperty('max-height', '500px', 'important');
                            //$('#grandfather-pagination')[0].style.setProperty('display', 'block', 'important');
                            $('.pagination')[0].style.setProperty('justify-content', 'flex-end', 'important');

                            $('#table tbody').html(response.html);
                            $('#table').show();
                            $('.pagination').show(); // Mostra a paginação novamente se necessário


                            // AQUI: Reaplicando máscaras após o novo conteúdo ser injetado
                           aplicarMascaras();
                           aplicarReadonly();
                           gerarPaginacao(response.paginaAtual, response.totalPaginas);

                        }
                    },
                    error: function (xhr) {
                        console.error("Erro:", xhr.responseText);
                    },
                    complete: function () {
                        $('#spinner-loading').hide(); // Oculta o spinner após conclusão
                    }
               
                });
            }


            // FILTRAR CONTATOS -- INICIO
        
            $('#btnFiltrar').on('click', function (e) {
                e.preventDefault(); // impede envio padrão do formulário

                //usando 'cleanVal' para obter o valor do input sem máscara
                params = {
                    Nome: $('#Nome').val(),
                    Fixo: $('#Fixo').cleanVal(),
                    Celular: $('#Celular').cleanVal(),
                    Comercial: $('#Comercial').val(),
                    Endereco: $('#Endereco').val(),
                    Email: $('#Email').val(),
                };

               // Verifica se todos os campos estão vazios
                const todosCamposVazios = Object.values(params).every(value => value === "");

                if (todosCamposVazios) {
                    // Ignora a requisição AJAX
                    return;
                }


                //montando a querystring
                queryString = Object.keys(params)
                    .map(k => `${k}=${encodeURIComponent(params[k])}`)
                    .join('&');


                let pagina = 1; // Sempre começa na página 1 ao aplicar novos filtros

                carregarContatosPaginados(pagina, queryString);
                
            });

           // FILTRAR CONTATOS -- FIM


            //PRECISO APLICAR A PAGINACAO NA HIPOTESE DE UM RESULTADO DE BUSCA FILTRADO
            $(document).on('click', '.pagination .page-link', function (e) {
                e.preventDefault();

                let pagina = $(this).data('pagina');

                carregarContatosPaginados(pagina, queryString || "");
            });


            // LIMPAR FILTROS -- INICIO
            $(document).on('click', '#btnLimparFiltros', function (e) {
                e.preventDefault();

                //limpando todos os campos de filtro
                $('#formFiltro').find('input').each(function () {
                    $(this).val('');
                });

                //carregando a primeira pagina
                carregarContatosPaginados(1);

                queryString = '';
            });
            // LIMPAR FILTROS -- FIM
    }); 

        



    </script>

  

}